jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Acme\FindMartialBundle\Entity\User:
            algorithm: sha512
            encode-as-base64: true
            iterations: 10

    role_hierarchy:
        ROLE_CLIENT:      ROLE_USER
        ROLE_MASTER:      ROLE_USER
        ROLE_ADMIN:       [ROLE_USER, ROLE_CLIENT, ROLE_MASTER]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    acl:
        connection: default

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #login:
        #    pattern:  ^/login$
        #    security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true

    access_control:
        - { path: ^/$,                          role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$,                     role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register/?$,                access: "isAnonymous()" }
        - { path: ^/register/confirmed,         role: ROLE_USER }
        - { path: ^/resetting,                  role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/profile,                    role: ROLE_USER }
        - { path: ^/regclient,                  access: "hasRole('ROLE_USER') and not hasAnyRole('ROLE_CLIENT', 'ROLE_MASTER')" }
        - { path: ^/regmaster,                  access: "hasRole('ROLE_USER') and not hasAnyRole('ROLE_CLIENT', 'ROLE_MASTER')" }
        - { path: ^/regclient_create,           access: "hasRole('ROLE_USER') and not hasAnyRole('ROLE_CLIENT', 'ROLE_MASTER')" }
        - { path: ^/regmaster_create,           access: "hasRole('ROLE_USER') and not hasAnyRole('ROLE_CLIENT', 'ROLE_MASTER')" }

        - { path: ^/master/new,                 role: [ROLE_CLIENT, ROLE_MASTER] }
        - { path: '^/master/([0-9]*)/edit$',    role: [ROLE_CLIENT, ROLE_MASTER] }
        - { path: ^/club/new,                   role: [ROLE_CLIENT] }
        - { path: '^/club/([0-9]*)/edit$',      role: [ROLE_CLIENT] }
        - { path: ^/art/new,                    role: [ROLE_CLIENT, ROLE_MASTER] }
        - { path: '^/art/([0-9]*)/edit$',       role: [ROLE_CLIENT, ROLE_MASTER] }

        #- { path: ^/master_client/assign,		role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_client/resign,		role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_client/approve, 	role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_client/disapprove,  role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_club/assign,		role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_club/resign,		role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_club/approve, 		role: [ROLE_CLIENT, ROLE_MASTER] }
        #- { path: ^/master_club/disapprove, 	role: [ROLE_CLIENT, ROLE_MASTER] }
        
        - { path: ^/master/$,                   role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/master/([0-9]*)$',         role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/club/$,                     role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/club/([0-9]*)$',           role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/art/$,                      role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/art/([0-9]*)$',            role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/addserv/$,                  role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/addserv/([0-9]*)$',        role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/client/$,                   role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/client/([0-9]*)$',         role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: '^/client/([0-9]*)$',         role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/,                           role: ROLE_ADMIN }