{% form_theme form _self %}

<form class="ajax-form_" action="{{ entity.id  ? path('club_update', { 'id': entity.id }) : path('club_create') }}" method="post" {{ form_enctype(form) }}>

  {% if entity.id %}
      <input type="hidden" name="_method" value="PUT" />
  {% endif %}
  

  <div class="mapsearch">{{ form_row (form.address) }}</div>
      <div id="map" class="map"></div>


  {% macro photoRow(clubphoto) %}
    <li>{{ form_row(clubphoto.title) }}{{ form_row(clubphoto.photo) }}</li>
  {% endmacro %}

  <ul id="photos-fields-list" class="photos" data-prototype="{{ _self.photoRow(form.clubPhotos.vars.prototype) | e }}">
    {% for photoField in form.clubPhotos %}
      {{ _self.photoRow(photoField) }}
    {% endfor %}
  </ul>

  {{ form_widget(form.clubPhotos) }}

  {{ form_rest(form) }}

  <p>
      <button type="submit">{{ 'field.save'|trans({}, 'FindMartialBundle') }}</button>
  </p>

</form>

<script>

	function addPhotoForm(collectionHolder, $newLinkLi) {
	    // Get the data-prototype explained earlier
	    var prototype = collectionHolder.data('prototype');

	    // get the new index
	    var index = collectionHolder.data('index');

	    // Replace '__name__' in the prototype's HTML to
	    // instead be a number based on how many items we have
	    var newForm = prototype.replace(/__name__/g, index);

	    // increase the index with one for the next item
	    collectionHolder.data('index', index + 1);

	    // Display the form in the page in an li, before the "Add a photo" link li
	    var $newFormLi = $('<li></li>').append(newForm);
	    $newLinkLi.before($newFormLi);
	}


	// Get the ul that holds the collection of photos
	var collectionHolder = $('ul.photos');

	// setup an "add a photos" link
	var $addPhotoLink = $('<a href="#" class="add_photo_link">Add a photo</a>');
	var $newLinkLi = $('<li></li>').append($addPhotoLink);

	jQuery(document).ready(function() {
	    // add the "add a photo" anchor and li to the photos ul
	    collectionHolder.append($newLinkLi);

	    // count the current form inputs we have (e.g. 2), use that as the new
	    // index when inserting a new item (e.g. 2)
	    collectionHolder.data('index', collectionHolder.find(':input').length);

	    $addPhotoLink.on('click', function(e) {
	        // prevent the link from creating a "#" on the URL
	        e.preventDefault();

	        // add a new photo form (see next code block)
	        addPhotoForm(collectionHolder, $newLinkLi);
	    });
	});
</script>